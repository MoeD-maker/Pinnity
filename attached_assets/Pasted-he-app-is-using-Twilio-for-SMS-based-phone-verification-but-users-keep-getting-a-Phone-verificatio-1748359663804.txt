he app is using Twilio for SMS-based phone verification, but users keep getting a "Phone verification required" error after successfully entering the correct verification code.

This means that the phone number is being verified on the client side, but the backend is not updating the user record or respecting this verification during login.

Please perform the following actions thoroughly, **but skip and log any that are already implemented correctly**:

---

### üîß 1. [BACKEND] Create an endpoint to mark a user as phone verified
- File: `server/routes/auth.routes.ts`
- Add this new route:

```ts
app.post('/auth/verify-phone', async (req: Request, res: Response) => {
  try {
    const { phoneNumber } = req.body;

    const user = await storage.getUserByPhone(phoneNumber);
    if (!user) return res.status(404).json({ message: 'User not found' });

    await storage.updateUser(user.id, { phoneVerified: true });

    return res.status(200).json({ message: 'Phone verified successfully' });
  } catch (error) {
    console.error('Error verifying phone:', error);
    return res.status(500).json({ message: 'Internal server error' });
  }
});
‚úÖ If this route already exists, do not duplicate it. Simply ensure it functions as expected.

üîç 2. [BACKEND] Enforce phone verification on login
In the login handler inside auth.routes.ts, after fetching the user and before generating tokens, insert:

ts
Copy
Edit
if (!user.phoneVerified) {
  return res.status(403).json({ message: 'Phone verification required' });
}
‚úÖ If this check is already present, leave it as-is and log that it exists.

üß† 3. [BACKEND] Ensure the User table has a phoneVerified boolean column
Check the schema definition for the User model (shared/schema.ts or equivalent).

Ensure there is a field like this:

ts
Copy
Edit
phoneVerified: boolean;
‚úÖ If it already exists, skip the addition but confirm it's used correctly.

üì≤ 4. [FRONTEND] Call /auth/verify-phone after successful verification
File: client/src/components/auth/TwilioPhoneVerification.tsx

In the handleVerifyCode() function, after calling onVerificationComplete(true), add this call:

ts
Copy
Edit
await fetch('/auth/verify-phone', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({ phoneNumber })
});
‚úÖ If a similar call already exists, log and skip.

‚úÖ 5. [Optional but recommended] Add logging for when verification status is updated
In the backend route /auth/verify-phone, log something like:

ts
Copy
Edit
console.log(`Phone verified for user ${user.id} (${user.phone})`);
‚úÖ Again, skip if logging already exists.

