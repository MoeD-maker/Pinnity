The `IndividualSignupForm.tsx` file still throws the error ‚ÄúYou must accept Terms of Service‚Äù even when the checkbox is checked. You have already added the `register("termsAccepted")` call and a hidden input ‚Äî but the form still fails validation. Here's exactly what needs to be fixed and why:

---

### üß† What‚Äôs Wrong

1. **The checkbox is not natively registered with React Hook Form.**
   You are updating the checkbox value via `setValue(...)`, but React Hook Form cannot reliably validate it unless it is explicitly tied to the form‚Äôs state during interaction.

2. **Calling `register("termsAccepted")` as a function alone doesn‚Äôt connect it to any real DOM element.**
   While the hidden input helps register the field, you must ensure the checkbox‚Äôs checked state and changes trigger updates with the right flags (`shouldValidate`, `shouldDirty`).

3. **You're calling `setValue("termsAccepted", true)` in other parts of the form, which may override or conflict with real input state.**
   This breaks consistency in validation logic.

---

### ‚úÖ Step-by-Step Fix (Do This Exactly)

#### ‚úÖ 1. Replace the checkbox block with this:
```tsx
<div className="flex items-center space-x-2">
  <Checkbox
    id="terms"
    checked={watch("termsAccepted")}
    onCheckedChange={(checked) =>
      setValue("termsAccepted", !!checked, {
        shouldValidate: true,
        shouldDirty: true,
      })
    }
  />
  <Label
    htmlFor="terms"
    className={`text-sm font-medium ${
      errors.termsAccepted ? "text-red-500" : "text-gray-700"
    }`}
  >
    I agree to the Terms of Service
  </Label>
</div>
‚úÖ 2. Just below that, include this:
tsx
Copy
Edit
<input type="hidden" {...register("termsAccepted")} />
{errors.termsAccepted && (
  <p className="text-xs text-red-500 mt-1">
    {errors.termsAccepted.message}
  </p>
)}
‚úÖ 3. Remove or comment out any of these (if present):
register("termsAccepted") as a standalone line.

Any call to setValue("termsAccepted", true) outside the checkbox‚Äôs onCheckedChange.

Debug logs or overrides that force termsAccepted = true regardless of user interaction.

‚úÖ Final Checklist
 The checkbox is visually and logically tied to the form.

 Its state is updated using setValue with shouldValidate: true and shouldDirty: true.

 A hidden input is used to ensure termsAccepted is submitted with the form.

 There are no rogue calls overriding the checkbox value before submission.

 Validation errors disappear when the box is checked and the form is submitted.

This is the only way to guarantee react-hook-form tracks and validates the termsAccepted field reliably. Please apply exactly this fix.