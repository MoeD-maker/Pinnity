The "I agree to the Terms of Service" checkbox in `IndividualSignupForm.tsx` is causing a validation error even when it's checked. The form always throws the message “You must accept Terms of Service” — this used to work before but got broken after recent edits.

Please fix ONLY this issue. Here is the step-by-step breakdown of what’s wrong and what needs to be corrected:

---

### ❌ Problem:

- The `termsAccepted` field is being watched with `watch("termsAccepted")`, and its value is being updated with `setValue(...)`.
- A hidden input `<input type="hidden" {...register("termsAccepted")} />` is also present, which is correct.
- But validation still fails, suggesting the `termsAccepted` value is **not being submitted correctly or is being overridden** before the final POST request.
- There is also a line setting `termsAccepted: false` in default values or near submission logic — this is likely **overriding the checkbox state**.

---

### ✅ What You Must Do:

#### 1. Ensure this checkbox block looks like this:
```tsx
<div className="flex items-center space-x-2">
  <Checkbox
    id="terms"
    checked={watch("termsAccepted")}
    onCheckedChange={(checked) =>
      setValue("termsAccepted", !!checked, {
        shouldValidate: true,
        shouldDirty: true,
      })
    }
  />
  <Label
    htmlFor="terms"
    className={`text-sm font-medium ${
      errors.termsAccepted ? "text-red-500" : "text-gray-700"
    }`}
  >
    I agree to the Terms of Service
  </Label>
</div>
2. Just after that block, include:
tsx
Copy
Edit
<input type="hidden" {...register("termsAccepted")} />

{errors.termsAccepted && (
  <p className="text-xs text-red-500 mt-1">
    {errors.termsAccepted.message}
  </p>
)}
3. Then do the critical cleanup:
🔥 Remove any line like:

tsx
Copy
Edit
termsAccepted: false,
in your useForm default values or submission payload object.

🔥 Do NOT manually override formData.termsAccepted = false or true before calling the API. The final value must come from react-hook-form's state.

🔥 If you’re creating a new object from form data (like const payload = { ...data }), make sure data.termsAccepted is not being modified afterward.

✅ Goal:
After your fix:

Checking the checkbox should satisfy the form validator.

The form should submit without the “You must accept Terms of Service” error.

