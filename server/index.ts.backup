import express from 'express';
import cors from 'cors';
import cookieParser from 'cookie-parser';
import { fileURLToPath } from 'url';
import { dirname } from 'path';
import path from 'path';
import { router as adminRouter } from './routes/admin.routes.supabase';
import { router as authRouter } from './routes/auth.routes.supabase';
import { gatedRegister, gatedLogin } from './routes/auth.routes.gated';
import { uploadMiddleware } from './uploadMiddleware.supabase';
import { initializeSupabaseStorage } from './supabaseStorage';
import { pool } from './db';
import dotenv from 'dotenv';

// Load environment variables
dotenv.config();

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const app = express();
const PORT = process.env.PORT || 5000;

// CORS configuration 
app.use(cors({
  origin: process.env.NODE_ENV === 'production' 
    ? ['https://your-domain.com'] 
    : [
        'http://localhost:3000', 
        'http://localhost:5173',
        /^https:\/\/.*\.replit\.dev$/,
        /^https:\/\/.*\.repl\.co$/,
        /^https:\/\/.*\.replit\.app$/,
      ],
  credentials: true,
}));

app.use(express.json({ limit: '50mb' }));
app.use(express.urlencoded({ extended: true, limit: '50mb' }));
app.use(cookieParser());

// Initialize Supabase Storage
console.log('🚀 Initializing Supabase Storage...');
initializeSupabaseStorage().then(() => {
  console.log('✅ Supabase Storage initialized successfully');
}).catch(err => {
  console.error('❌ Supabase Storage initialization failed:', err);
});

// Health check
app.get('/health', (req, res) => {
  res.json({ status: 'ok', timestamp: new Date().toISOString() });
});

// Authentication routes
console.log('🔥 Registering PRIMARY Supabase authentication system');
app.use('/api/auth', authRouter);

// Gated authentication routes
app.post('/api/auth/gated/register', gatedRegister);
app.post('/api/auth/gated/login', gatedLogin);

// Admin routes
app.use('/api/admin', adminRouter);

// Serve static files in production
if (process.env.NODE_ENV === 'production') {
  app.use(express.static(path.join(__dirname, '../dist')));
  app.get('*', (req, res) => {
    res.sendFile(path.join(__dirname, '../dist/index.html'));
  });
}

// Start server
app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
  console.log(`🌐 Access via: http://localhost:${PORT}`);
});

export default app;